<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.gdrj.est.dao.ClassifyDao">
  <resultMap id="BaseResultMap" type="cn.gdrj.est.entity.Classify">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="classifyName" jdbcType="VARCHAR" property="classifyName" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="bigIcon" jdbcType="VARCHAR" property="bigIcon" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createdUserId" jdbcType="BIGINT" property="createdUserId" />
    <result column="updatedUserId" jdbcType="BIGINT" property="updatedUserId" />
    <result column="createdTime" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updatedTime" jdbcType="TIMESTAMP" property="updatedTime" />
    <result column="isDelete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, classifyName, icon, bigIcon, description, `status`, createdUserId, updatedUserId,
    createdTime, updatedTime, isDelete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from classify
    where id = #{id,jdbcType=BIGINT}
  </select>

    <select id="listClassifyBy" resultType="cn.gdrj.est.entity.Classify">
        select
        <include refid="Base_Column_List" />
        from classify
        <where>
          <if test="status != null">
            status = #{status}
          </if>
          <if test="isDelete != null">
            and isDelete = #{isDelete}
          </if>
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from classify
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.gdrj.est.entity.Classify" useGeneratedKeys="true">
    insert into classify (classifyName, icon, bigIcon,
      description, `status`, createdUserId,
      updatedUserId, createdTime, updatedTime,
      isDelete)
    values (#{classifyName,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{bigIcon,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createdUserId,jdbcType=BIGINT},
      #{updatedUserId,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP},
      #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.gdrj.est.entity.Classify" useGeneratedKeys="true">
    insert into classify
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="classifyName != null">
        classifyName,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="bigIcon != null">
        bigIcon,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createdUserId != null">
        createdUserId,
      </if>
      <if test="updatedUserId != null">
        updatedUserId,
      </if>
      <if test="createdTime != null">
        createdTime,
      </if>
      <if test="updatedTime != null">
        updatedTime,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="classifyName != null">
        #{classifyName,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="bigIcon != null">
        #{bigIcon,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdUserId != null">
        #{createdUserId,jdbcType=BIGINT},
      </if>
      <if test="updatedUserId != null">
        #{updatedUserId,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.gdrj.est.entity.Classify">
    update classify
    <set>
      <if test="classifyName != null">
        classifyName = #{classifyName,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="bigIcon != null">
        bigIcon = #{bigIcon,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdUserId != null">
        createdUserId = #{createdUserId,jdbcType=BIGINT},
      </if>
      <if test="updatedUserId != null">
        updatedUserId = #{updatedUserId,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        createdTime = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.gdrj.est.entity.Classify">
    update classify
    set classifyName = #{classifyName,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      bigIcon = #{bigIcon,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      createdUserId = #{createdUserId,jdbcType=BIGINT},
      updatedUserId = #{updatedUserId,jdbcType=BIGINT},
      createdTime = #{createdTime,jdbcType=TIMESTAMP},
      updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      isDelete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
